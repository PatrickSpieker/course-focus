{"nodes": [{"course_info": "<p><b>CSE 481 Capstone Software Design (5, max. 15)</b><br/>Students work in teams to design and implement a software project involving multiple areas of the CSE curriculum. Emphasis is placed on the development process itself, rather than on the product. ", "course_name": "CSE 481", "choice_prereqs": [["cse331", "cse352"]], "course_id": "cse481", "numCID": 481, "reg_prereqs": ["cse332", "cse351"]}, {"course_info": "<p><b>CSE 160 Data Programming (4) NW, QSR</b><br/>Introduction to computer programming. Assignments solve real data manipulation tasks from science, engineering, business, and the humanities. Concepts of computational thinking, problem-solving, data analysis, Python programming, control and data abstraction, file processing, and data visualization. Intended for students without prior programming experience. No credit if CSE 143 has been taken.<br/><a href=\"https://uwstudent.washington.edu/student/myplan/course/CSE160\" target=\"_blank\">View course details in MyPlan: CSE 160</a></p", "course_name": "CSE 160", "choice_prereqs": [], "course_id": "cse160", "numCID": 160, "reg_prereqs": []}, {"course_info": "<p><b>CSE 301 CSE Internship Education (1-2, max. 12)</b><br/>CSE Internship practicum; integration of classroom theory with on-the-job training. Periods of full-time work alternate with periods of full-time study. Open only to students who have been admitted to CSE Internship Program or by special permission of the Department. Offered credit/no credit only. Credit/no-credit only. Offered: AWSpS.<br/><a href=\"https://uwstudent.washington.edu/student/myplan/course/CSE301\" target=\"_blank\">View course details in MyPlan: CSE 301</a></p", "course_name": "CSE 301", "choice_prereqs": [], "course_id": "cse301", "numCID": 301, "reg_prereqs": []}, {"course_info": "<p><b>CSE 495 Project Practicum ([1-5]-, max. 5)</b><br/>Available in special situations for computer science majors to compete, under instructor guidance, a substantial computing project that deepens one's knowledge and experience in the field. Projects may involve a group of students.<br/><a href=\"https://uwstudent.washington.edu/student/myplan/course/CSE495\" target=\"_blank\">View course details in MyPlan: CSE 495</a></p", "course_name": "CSE 495", "choice_prereqs": [], "course_id": "cse495", "numCID": 495, "reg_prereqs": []}, {"course_info": "<p><b>CSE 464 Advanced Topics in Digital Animation (1-5, max. 10)</b><br/>Students design individual animated works for professional quality demo reels. 2- and 3-D animatics, special effects design, advanced character animation techniques, 3-D paint techniques and integration, short design, sequence planning, non-photorealistic rendering options, interactive animation for pre-planning, and advanced production techniques and strategies.<br/><a href=\"https://uwstudent.washington.edu/student/myplan/course/CSE464\" target=\"_blank\">View course details in MyPlan: CSE 464</a></p", "course_name": "CSE 464", "choice_prereqs": [], "course_id": "cse464", "numCID": 464, "reg_prereqs": []}, {"course_info": "<p><b>CSE 467 Advanced Digital Design (4)</b><br/>Advanced techniques in the design of digital systems. Hardware description languages, combinational and sequential logic synthesis and optimization methods, partitioning, mapping to regular structures. Emphasis on reconfigurable logic as an implementation medium. Memory system design. Digital communication including serial/parallel and synchronous/asynchronous methods. ", "course_name": "CSE 467", "choice_prereqs": [], "course_id": "cse467", "numCID": 467, "reg_prereqs": ["cse352", "cse332"]}, {"course_info": "<p><b>CSE 488 Laboratory Methods in Synthetic Biology (4)</b><br/>Designs and builds transgenic bacterial using promoters and genes taken from a variety of organisms. Uses construction techniques including recombination, gene synthesis, and gene extraction. Evaluates designs using sequencing, fluorescence assays, enzyme activity assays, and single cell studies using time-lapse microscopy. ", "course_name": "CSE 488", "choice_prereqs": [["bioen423", "ee423", "cse486"], ["chem142", "chem144", "chem145"]], "course_id": "cse488", "numCID": 488, "reg_prereqs": []}, {"course_info": "<p><b>CSE 461 Introduction to Computer-Communication Networks (4)</b><br/>Computer network architectures, protocol layers, network programming. Transmission media, encoding systems, switching, multiple access arbitration. Network routing, congestion control, flow control. Transport protocols, real-time, multicast, network security. ", "course_name": "CSE 461", "choice_prereqs": [["cse326", "cse332"], ["cse303", "cse333"]], "course_id": "cse461", "numCID": 461, "reg_prereqs": []}, {"course_info": "<p><b>CSE 460 Animation Capstone (5)</b><br/>Apply the knowledge gained in previous animation courses to produce a short animated film. Topics include scene planning, digital cinematography, creature and hard surface modeling, animatics and basics of character animation, and rendering techniques. ", "course_name": "CSE 460", "choice_prereqs": [], "course_id": "cse460", "numCID": 460, "reg_prereqs": ["cse458", "cse459"]}, {"course_info": "<p><b>CSE 120 Computer Science Principles (5) NW, QSR</b><br/>Introduces fundamental concepts of computer science and computational thinking. Includes logical reasoning, problem solving, data representation, abstraction, the creation of digital artifacts such as web pages and programs, managing complexity, operation of computers and networks, effective web searching, ethical, legal and social aspects of information technology. May not be taken for credit if credit earned in CSE 100/INFO 100.<br/><a href=\"https://uwstudent.washington.edu/student/myplan/course/CSE120\" target=\"_blank\">View course details in MyPlan: CSE 120</a></p", "course_name": "CSE 120", "choice_prereqs": [], "course_id": "cse120", "numCID": 120, "reg_prereqs": []}, {"course_info": "<p><b>CSE 341 Programming Languages (4)</b><br/>Basic concepts of programming languages, including abstraction mechanisms, static and dynamic typing, scope, syntax vs. semantics, first-class function closures, and algebraic datatypes. Detailed study of functional programming and other paradigms. No credit if CSE 413 has been taken. ", "course_name": "CSE 341", "choice_prereqs": [], "course_id": "cse341", "numCID": 341, "reg_prereqs": ["cse143"]}, {"course_info": "<p><b>CSE 344 Introduction to Data Management (4)</b><br/>Introduces database management systems and writing applications that use such systems; data models (e.g., relational, semi-structured), query languages (e.g., SQL, XQuery), language bindings, conceptual modeling, transactions, security, database tuning, data warehousing, parallelism, and web-data management. ", "course_name": "CSE 344", "choice_prereqs": [], "course_id": "cse344", "numCID": 344, "reg_prereqs": ["cse311"]}, {"course_info": "<p><b>CSE 487 Advanced Systems and Synthetic Biology (3)</b><br/>Covers advanced concepts in system and synthetic biology. Includes kinetics, modeling, stoichiometry, control theory, metabolic systems, signaling, and motifs. All topics are set against problems in synthetic biology. ", "course_name": "CSE 487", "choice_prereqs": [["bioen401", "bioen423", "ee423", "cse486"]], "course_id": "cse487", "numCID": 487, "reg_prereqs": []}, {"course_info": "<p><b>CSE 142 Computer Programming I (4) NW, QSR</b><br/>Basic programming-in-the-small abilities and concepts including procedural programming (methods, parameters, return, values), basic control structures (sequence, if/else, for loop, while loop), file processing, arrays, and an introduction to defining objects. Intended for students without prior programming experience. Offered: AWSpS.<br/><a href=\"https://uwstudent.washington.edu/student/myplan/course/CSE142\" target=\"_blank\">View course details in MyPlan: CSE 142</a></p", "course_name": "CSE 142", "choice_prereqs": [], "course_id": "cse142", "numCID": 142, "reg_prereqs": []}, {"course_info": "<p><b>CSE 143 Computer Programming II (5) NW, QSR</b><br/>Continuation of CSE 142. Concepts of data abstraction and encapsulation including stacks, queues, linked lists, binary trees, recursion, instruction to complexity and use of predefined collection classes. ", "course_name": "CSE 143", "choice_prereqs": [], "course_id": "cse143", "numCID": 143, "reg_prereqs": ["cse142"]}, {"course_info": "<p><b>CSE 312 Foundations of Computing II (4) QSR</b><br/>Examines fundamentals of enumeration and discrete probability; applications of randomness to computing; polynomial-time versus NP; and NP-completeness. ", "course_name": "CSE 312", "choice_prereqs": [], "course_id": "cse312", "numCID": 312, "reg_prereqs": ["cse311", "cse332"]}, {"course_info": "<p><b>CSE 454 Advanced Internet and Web Services (5)</b><br/>Design of Internet search engines, including spider architecture, inverted indices, frequency rankings, latent semantic indexing, hyperlink analysis, and refinement interfaces. Construction of scalable and secure web services. Datamining webserver logs to provide personalized and user-targeted services. Large project. ", "course_name": "CSE 454", "choice_prereqs": [["cse331", "cse352"]], "course_id": "cse454", "numCID": 454, "reg_prereqs": ["cse332", "cse351"]}, {"course_info": "<p><b>CSE 333 Systems Programming (4)</b><br/>Includes substantial programming experience in languages that expose machine characteristics and low-level data representation (e.g., C and C++); explicit memory management; modern libraries and language features; interacting with operating-system services; introduction to concurrent programming. ", "course_name": "CSE 333", "choice_prereqs": [], "course_id": "cse333", "numCID": 333, "reg_prereqs": ["cse351"]}, {"course_info": "<p><b>CSE 369 Introduction to Digital Design (2)</b><br/>Introduces the implementation, specification, and simulation of digital logic. Boolean algebra; combinational circuits including arithmetic circuits and regular structures; sequential circuits including finite-state-machines; and use of field-programmable gate arrays (FPGAs). Emphasizes simulation, high-level specification, and automatic synthesis techniques. No credit if EE 271 has been taken. ", "course_name": "CSE 369", "choice_prereqs": [], "course_id": "cse369", "numCID": 369, "reg_prereqs": ["cse311"]}, {"course_info": "<p><b>CSE 332 Data Structures and Parallelism (4)</b><br/>Covers abstract data types and structures including dictionaries, balanced trees, hash tables, priority queues, and graphs; sorting; asymptotic analysis; fundamental graph algorithms including graph search, shortest path, and minimum spanning trees; multithreading and parallel algorithms; P and NP complexity classes. No credit if CSE 373 has been taken. ", "course_name": "CSE 332", "choice_prereqs": [], "course_id": "cse332", "numCID": 332, "reg_prereqs": ["cse311"]}, {"course_info": "<p><b>CSE 484 Computer Security (4)</b><br/>Foundations of modern computer security, including software security, operating system security, network security, applied cryptography, human factors, authentication, anonymity, and web security. ", "course_name": "CSE 484", "choice_prereqs": [], "course_id": "cse484", "numCID": 484, "reg_prereqs": ["cse332", "cse351"]}, {"course_info": "<p><b>CSE 352 Hardware Design and Implementation (4)</b><br/>Covers digital circuit design, processor design, and systems integration and embedded-systems issues. Includes substantial hardware laboratory. ", "course_name": "CSE 352", "choice_prereqs": [], "course_id": "cse352", "numCID": 352, "reg_prereqs": ["cse311", "cse351"]}, {"course_info": "<p><b>CSE 498 Senior Project ([1-9]-, max. 9)</b><br/>A report (and perhaps demonstration) describing a development, survey, or small research project in computer science or an application to another field. Objectives: (1) integrating material from several courses, (2) introducing the professional literature, (3) gaining experience in writing a technical document, and (4) showing evidence of independent work.<br/><a href=\"https://uwstudent.washington.edu/student/myplan/course/CSE498\" target=\"_blank\">View course details in MyPlan: CSE 498</a></p", "course_name": "CSE 498", "choice_prereqs": [], "course_id": "cse498", "numCID": 498, "reg_prereqs": []}, {"course_info": "<p><b>CSE 399 CSE Foreign Study (*)</b><br/>Upper-division computer science or computer engineering course, taken through an approved study abroad program, for which there is no direct University of Washington equivalent. Credit/no-credit only.<br/><a href=\"https://uwstudent.washington.edu/student/myplan/course/CSE399\" target=\"_blank\">View course details in MyPlan: CSE 399</a></p", "course_name": "CSE 399", "choice_prereqs": [], "course_id": "cse399", "numCID": 399, "reg_prereqs": []}, {"course_info": "<p><b>CSE 431 Introduction to Theory of Computation (3)</b><br/>Models of computation, computable and noncomputable functions, space and time complexity, tractable and intractable functions. ", "course_name": "CSE 431", "choice_prereqs": [], "course_id": "cse431", "numCID": 431, "reg_prereqs": ["cse312"]}, {"course_info": "<p><b>CSE 486 Introduction to Synthetic Biology (3)</b><br/>Studies mathematical modeling of transcription, translation, regulation, and metabolism in cell; computer aided design methods for synthetic biology; implementation of information processing, Boolean logic and feedback control laws with genetic regulatory networks; modularity, impedance matching and isolation in biochemical circuits; and parameter estimation methods. ", "course_name": "CSE 486", "choice_prereqs": [["math136", "math307", "amath351", "cse311", "math308", "amath352"]], "course_id": "cse486", "numCID": 486, "reg_prereqs": []}, {"course_info": "<p><b>CSE 351 The Hardware/Software Interface (4)</b><br/>Examines key computational abstraction levels below modern high-level languages; number representation, assembly language, introduction to C, memory management, the operating-system process model, high-level machine architecture including the memory hierarchy, and how high-level languages are implemented. ", "course_name": "CSE 351", "choice_prereqs": [], "course_id": "cse351", "numCID": 351, "reg_prereqs": ["cse143"]}, {"course_info": "<p><b>CSE 473 Introduction to Artificial Intelligence (3)</b><br/>Principal ideas and developments in artificial intelligence: Problem solving and search, game playing, knowledge representation and reasoning, uncertainty, machine learning, natural language processing. Not open for credit to students who have completed CSE 415. ", "course_name": "CSE 473", "choice_prereqs": [], "course_id": "cse473", "numCID": 473, "reg_prereqs": ["cse332"]}, {"course_info": "<p><b>CSE 414 Introduction to Database Systems (4)</b><br/>Introduces database management systems and writing applications that use such systems; data models, query languages, transactions, database tuning, data warehousing, and parallelism. Intended for non-majors. Not open for credit to students who have completed CSE 344. ", "course_name": "CSE 414", "choice_prereqs": [], "course_id": "cse414", "numCID": 414, "reg_prereqs": ["cse143"]}, {"course_info": "<p><b>CSE 415 Introduction to Artificial Intelligence (3) NW</b><br/>Principles and programming techniques of artificial intelligence: LISP, symbol manipulation, knowledge representation, logical and probabilistic reasoning, learning, language understanding, vision, expert systems, and social issues. Intended for non-majors. Not open for credit to students who have completed CSE 473. ", "course_name": "CSE 415", "choice_prereqs": [], "course_id": "cse415", "numCID": 415, "reg_prereqs": ["cse373"]}, {"course_info": "<p><b>CSE 469 Computer Architecture I (5)</b><br/>Introduction to computer architecture. Assembly and machine language, microprocessor organization including control and datapath. Computer arithmetic. Memory systems and caching. Performance modeling of microprocessors. ", "course_name": "CSE 469", "choice_prereqs": [["ee271", "cse369"]], "course_id": "cse469", "numCID": 469, "reg_prereqs": ["cse143"]}, {"course_info": "<p><b>CSE 390 Special Topics in Computer Science and Engineering (1-5, max. 10)</b><br/>Covers topics of current interest in computer science and engineering.<br/><a href=\"https://uwstudent.washington.edu/student/myplan/course/CSE390\" target=\"_blank\">View course details in MyPlan: CSE 390</a></p", "course_name": "CSE 390", "choice_prereqs": [], "course_id": "cse390", "numCID": 390, "reg_prereqs": []}, {"course_info": "<p><b>CSE 410 Computer Systems (3)</b><br/>Structure and components of hardware and software systems. Machine organization, including central processor and input-output architectures; assembly language programming; operating systems, including process, storage, and file management. Intended for non-majors. No credit to students who have completed CSE 351 or CSE 451. ", "course_name": "CSE 410", "choice_prereqs": [], "course_id": "cse410", "numCID": 410, "reg_prereqs": ["cse373"]}, {"course_info": "<p><b>CSE 452 Introduction to Distributed Systems (4)</b><br/>Covers abstractions and implementation techniques in the construction of distributed systems, including cloud computing, distributed storage systems, and distributed caches. ", "course_name": "CSE 452", "choice_prereqs": [], "course_id": "cse452", "numCID": 452, "reg_prereqs": ["cse451"]}, {"course_info": "<p><b>CSE 413 Programming Languages and Their Implementation (3)</b><br/>Basic concepts and implementation strategies for modern functional and object-oriented programming languages such as Scheme and Java. Intended for non-majors. No credit to students who have completed CSE 341 or CSE 401. ", "course_name": "CSE 413", "choice_prereqs": [], "course_id": "cse413", "numCID": 413, "reg_prereqs": ["cse373"]}, {"course_info": "<p><b>CSE 458 Computer Animation (5)</b><br/>Introduction to basic principles of computer generated animation. Focus on the modeling and lighting of animated characters. Students from art, CSE, and music team up on projects to be built on commercially-available modeling and lighting packages. ", "course_name": "CSE 458", "choice_prereqs": [], "course_id": "cse458", "numCID": 458, "reg_prereqs": ["cse457"]}, {"course_info": "<p><b>CSE 459 Pre-Production for Collaborative Animation (5)</b><br/>Pre-production of collaboratively designed animated shorts. In-depth analysis of classical and computer generated works. Character design and pre-planning, model sheets, character rigging, storyreel and animatics, character motion, design for multiple characters, and principles of animation as applied to character motion and effects. ", "course_name": "CSE 459", "choice_prereqs": [], "course_id": "cse459", "numCID": 459, "reg_prereqs": ["cse458"]}, {"course_info": "<p><b>CSE 311 Foundations of Computing I (4) QSR</b><br/>Examines fundamentals of logic, set theory, induction, and algebraic structures with applications to computing; finite state machines; and limits of computability. ", "course_name": "CSE 311", "choice_prereqs": [["math126", "math136"]], "course_id": "cse311", "numCID": 311, "reg_prereqs": ["cse143"]}, {"course_info": "<p><b>CSE 497 Undergraduate Research Seminar (1)</b><br/>Students prepare and give a public talk on their faculty-sponsored research projects.<br/><a href=\"https://uwstudent.washington.edu/student/myplan/course/CSE497\" target=\"_blank\">View course details in MyPlan: CSE 497</a></p", "course_name": "CSE 497", "choice_prereqs": [], "course_id": "cse497", "numCID": 497, "reg_prereqs": []}, {"course_info": "<p><b>CSE 490 Special Topics in Computer Science and Engineering (1-5, max. 15)</b><br/>Lectures, discussions, and possibly labs on topics of current interest in computer science and engineering not covered by other CSE undergraduate courses.<br/><a href=\"https://uwstudent.washington.edu/student/myplan/course/CSE490\" target=\"_blank\">View course details in MyPlan: CSE 490</a></p", "course_name": "CSE 490", "choice_prereqs": [], "course_id": "cse490", "numCID": 490, "reg_prereqs": []}, {"course_info": "<p><b>CSE 491 Data Science and Society Seminar (1)</b><br/>Current topics related to the societal implications of data science. Topic selection will vary from quarter to quarter and may include data privacy and security, data anonymization, hypothesis-testing on a shared database, impact of data science-based decisions on society. Includes both guest speakers and case-study or article-based discussions. Credit/no-credit only. Credit/no-credit only.<br/><a href=\"https://uwstudent.washington.edu/student/myplan/course/CSE491\" target=\"_blank\">View course details in MyPlan: CSE 491</a></p", "course_name": "CSE 491", "choice_prereqs": [], "course_id": "cse491", "numCID": 491, "reg_prereqs": []}, {"course_info": "<p><b>CSE 450 Animation Production Seminar (1)</b><br/>Open to all students who have an interest in digital animation. Reviews and analyzes films, animated feature films, and television commercials. Emphasizes the technical and aesthetic basics of animation production in industry studio environments.<br/><a href=\"https://uwstudent.washington.edu/student/myplan/course/CSE450\" target=\"_blank\">View course details in MyPlan: CSE 450</a></p", "course_name": "CSE 450", "choice_prereqs": [], "course_id": "cse450", "numCID": 450, "reg_prereqs": []}, {"course_info": "<p><b>CSE 451 Introduction to Operating Systems (4)</b><br/>Principles of operating systems. Process management, memory management, auxiliary storage management, resource allocation. No credit to students who have completed CSE 410 or E E 474. ", "course_name": "CSE 451", "choice_prereqs": [], "course_id": "cse451", "numCID": 451, "reg_prereqs": ["cse351", "cse332", "cse333"]}, {"course_info": "<p><b>CSE 474 Introduction to Embedded Systems (4)</b><br/>Introduces the specification, design, development, and test of real time embedded system software. Use of a modern embedded microcomputer or microcontroller as a target environment for a series of laboratory projects and a comprehensive final project. ", "course_name": "CSE 474", "choice_prereqs": [], "course_id": "cse474", "numCID": 474, "reg_prereqs": ["cse143"]}, {"course_info": "<p><b>CSE 475 Embedded Systems Capstone (5)</b><br/>Capstone design experience. Prototype a substantial project mixing hardware, software, and communications. Focuses on embedded processors, programmable logic devices, and emerging platforms for the development of digital systems. Provides a comprehensive experience in specification, design, and management of contemporary embedded systems. ", "course_name": "CSE 475", "choice_prereqs": [["ee271", "cse369"], ["cse466", "ee472", "cse474", "ee474"]], "course_id": "cse475", "numCID": 475, "reg_prereqs": []}, {"course_info": "<p><b>CSE 472 Introduction to Computational Linguistics (5) VLPA/NW</b><i> E. BENDER</i><br/>Introduction to computational approaches to modeling language, for linguistic research and practical applications, including analyses at different levels of linguistic structure and symbolic as well as statistical approaches. ", "course_name": "CSE 472", "choice_prereqs": [["ling200", "ling400"], ["ling461", "cse311"]], "course_id": "cse472", "numCID": 472, "reg_prereqs": []}, {"course_info": "<p><b>CSE 499 Reading and Research (1-24, max. 24)</b><br/>Available in special situations for advanced computer science majors to do reading and research in field, subject to approval of undergraduate adviser and CSE faculty member. Free elective, but does not replace core course or computer science elective. Credit/no-credit only.<br/><a href=\"https://uwstudent.washington.edu/student/myplan/course/CSE499\" target=\"_blank\">View course details in MyPlan: CSE 499</a></p", "course_name": "CSE 499", "choice_prereqs": [], "course_id": "cse499", "numCID": 499, "reg_prereqs": []}, {"course_info": "<p><b>CSE 456 Story Design for Computer Animation (4)</b><br/>Animation principles and production for story development and design. Design, development, and production of several storyreels, which are a tool for the pre-production of animated features and shorts. Student use authoring tools to present finished work.<br/><a href=\"https://uwstudent.washington.edu/student/myplan/course/CSE456\" target=\"_blank\">View course details in MyPlan: CSE 456</a></p", "course_name": "CSE 456", "choice_prereqs": [], "course_id": "cse456", "numCID": 456, "reg_prereqs": []}, {"course_info": "<p><b>CSE 457 Computer Graphics (4)</b><br/>Introduction to computer image synthesis, modeling, and animation. Topics may include visual perception, displays and framebuffers, image processing, affine and projective transformations, hierarchical modeling, hidden surface elimination, shading, ray-tracing, anti-aliasing, texture mapping, curves, surfaces, particle systems, dynamics, character animation, and animation principles. ", "course_name": "CSE 457", "choice_prereqs": [], "course_id": "cse457", "numCID": 457, "reg_prereqs": ["cse333", "cse332"]}, {"course_info": "<p><b>CSE 374 Intermediate Programming Concepts and Tools (3)</b><br/>Covers key software development concepts and tools not in introductory courses. Concepts of lower-level programming (C/C++) and explicit memory management; techniques and tools for individual and group software development; design, implementation, and testing strategies. Intended for non-majors. Cannot be taken for credit if credit received for CSE 333. ", "course_name": "CSE 374", "choice_prereqs": [], "course_id": "cse374", "numCID": 374, "reg_prereqs": ["cse143"]}, {"course_info": "<p><b>CSE 371 Design of Digital Circuits and Systems (5)</b><br/>Provides a theoretical background in, and practical experience with, tools, and techniques for modeling complex digital systems with the Verilog hardware description language, maintaining signal integrity, managing power consumption, and ensuring robust intra- and inter-system communication. ", "course_name": "CSE 371", "choice_prereqs": [["ee205", "ee215"], ["ee271", "cse369"]], "course_id": "cse371", "numCID": 371, "reg_prereqs": []}, {"course_info": "<p><b>CSE 470 Computer Architecture II (4)</b><br/>Advanced computer architecture. Performance evaluation and energy efficiency. Instruction set architectures. Instruction-level parallelism. Modern microprocessor micro-architecture. Thread-level parallelism. Cache coherency and memory consistency in shared-memory multiprocessors. Memory hierarchy. GPU architecture. Warehouse-scale computing. Trends in computer design. ", "course_name": "CSE 470", "choice_prereqs": [["cse469", "ee469", "ee471"]], "course_id": "cse470", "numCID": 470, "reg_prereqs": ["cse351"]}, {"course_info": "<p><b>CSE 373 Data Structures and Algorithms (3)</b><br/>Fundamental algorithms and data structures for implementation. Techniques for solving problems by programming. Linked lists, stacks, queues, directed graphs. Trees: representations, traversals. Searching (hashing, binary search trees, multiway trees). Garbage collection, memory management. Internal and external sorting. Intended for non-majors. Not open for credit to students who have completed CSE 332. ", "course_name": "CSE 373", "choice_prereqs": [], "course_id": "cse373", "numCID": 373, "reg_prereqs": ["cse143"]}, {"course_info": "<p><b>CSE 331 Software Design and Implementation (4)</b><br/>Explores concepts and techniques for design and construction of reliable and maintainable software systems in modern high-level languages: specifications; program structure and design; program-correctness approaches, including testing; and event-driven programming (e.g., graphical user interface). ", "course_name": "CSE 331", "choice_prereqs": [], "course_id": "cse331", "numCID": 331, "reg_prereqs": ["cse143"]}, {"course_info": "<p><b>CSE 455 Computer Vision (4)</b><br/>Introduction to image analysis and interpreting the 3D world from image data. Topics may include segmentation, motion estimation, image mosaics, 3D-shape reconstruction, object recognition, and image retrieval. ", "course_name": "CSE 455", "choice_prereqs": [], "course_id": "cse455", "numCID": 455, "reg_prereqs": ["cse333", "cse332"]}, {"course_info": "<p><b>CSE 391 System and Software Tools (1)</b><br/>Introduction to tools commonly used in software development. Topics include using a command-line interface, writing scripts for file and string manipulation, managing user permissions, manipulating text with regular expressions, using build-management tools, and using version-control systems. ", "course_name": "CSE 391", "choice_prereqs": [], "course_id": "cse391", "numCID": 391, "reg_prereqs": ["cse143"]}, {"course_info": "<p><b>CSE 154 Web Programming (5) QSR</b><br/>Covers languages, tools, and techniques for developing interactive and dynamic web pages. Topics include page styling, design, and layout; client and server side scripting; web security; and interacting with data sources such as databases. ", "course_name": "CSE 154", "choice_prereqs": [["cse142", "cse143", "cse160"]], "course_id": "cse154", "numCID": 154, "reg_prereqs": []}, {"course_info": "<p><b>CSE 131 Science and Art of Digital Photography (4) VLPA</b><i> Hemingway</i><br/>Covers the fundamentals of digital photography, including computational imaging; the elements of photographic composition and design; and the future of internet-enabled photography.<br/><a href=\"https://uwstudent.washington.edu/student/myplan/course/CSE131\" target=\"_blank\">View course details in MyPlan: CSE 131</a></p", "course_name": "CSE 131", "choice_prereqs": [], "course_id": "cse131", "numCID": 131, "reg_prereqs": []}, {"course_info": "<p><b>CSE 427 Computational Biology (3)</b><br/>Algorithmic and analytic techniques underlying analysis of large-scale biological data sets such as DNA, RNA, and protein sequences or structures, expression and proteomic profiling. Hands-on experience with databases, analysis tools, and genome markers. Applications such as sequence alignment, BLAST, phylogenetics, and Markov models. ", "course_name": "CSE 427", "choice_prereqs": [], "course_id": "cse427", "numCID": 427, "reg_prereqs": ["cse312", "cse332"]}, {"course_info": "<p><b>CSE 417 Algorithms and Computational Complexity (3)</b><br/>Design and analysis of algorithms and data structures. Efficient algorithms for manipulating graphs and strings. Fast Fourier Transform. Models of computation, including Turing machines. Time and space complexity. NP-complete problems and undecidable problems. Intended for non-majors. ", "course_name": "CSE 417", "choice_prereqs": [], "course_id": "cse417", "numCID": 417, "reg_prereqs": ["cse373"]}, {"course_info": "<p><b>CSE 421 Introduction to Algorithms (3)</b><br/>Techniques for design of efficient algorithms. Methods for showing lower bounds on computational complexity. Particular algorithms for sorting, searching, set manipulation, arithmetic, graph problems, pattern matching. ", "course_name": "CSE 421", "choice_prereqs": [], "course_id": "cse421", "numCID": 421, "reg_prereqs": ["cse312", "cse332"]}, {"course_info": "<p><b>CSE 446 Machine Learning (4)</b><br/>Methods for designing systems that learn from data and improve with experience. Supervised learning and predictive modeling: decision trees, rule induction, nearest neighbors, Bayesian methods, neural networks, support vector machines, and model ensembles. Unsupervised learning and clustering. ", "course_name": "CSE 446", "choice_prereqs": [["stat390", "stat391", "cse312"]], "course_id": "cse446", "numCID": 446, "reg_prereqs": ["cse332"]}, {"course_info": "<p><b>CSE 444 Database Systems Internals (4)</b><br/>The relational data model and the SQL query language. Conceptual modeling: entity/relationships, normal forms. XML, XPath, and XQuery. Transactions: recovery and concurrency control. Implementation of a database system. A medium sized project using a rational database backend. ", "course_name": "CSE 444", "choice_prereqs": [], "course_id": "cse444", "numCID": 444, "reg_prereqs": ["cse332", "cse344"]}, {"course_info": "<p><b>CSE 190 Current Topics in Computer Science and Engineering (1-5, max. 15)</b><br/><a href=\"https://uwstudent.washington.edu/student/myplan/course/CSE190\" target=\"_blank\">View course details in MyPlan: CSE 190</a></p", "course_name": "CSE 190", "choice_prereqs": [], "course_id": "cse190", "numCID": 190, "reg_prereqs": []}, {"course_info": "<p><b>CSE 442 Data Visualization (4)</b><br/>Techniques for creating effective visualizations of data based on principles from graphic design, perceptual psychology, and statistics. Topics include visual encoding models, exploratory data analysis, visualization software, interaction techniques, graphical perception, color, animation, high-dimensional data, cartography, network visualization, and text visualization. ", "course_name": "CSE 442", "choice_prereqs": [], "course_id": "cse442", "numCID": 442, "reg_prereqs": ["cse332"]}, {"course_info": "<p><b>CSE 441 Advanced HCI: Advanced User Interface Design, Prototyping, and Evaluation (5)</b><br/>Human-Computer Interaction (HCI) theory and techniques. Advanced methods for designing, prototyping, and evaluating user interfaces to computing applications. Novel interface technology, advanced interface design methods, and prototyping tools. ", "course_name": "CSE 441", "choice_prereqs": [], "course_id": "cse441", "numCID": 441, "reg_prereqs": ["cse440"]}, {"course_info": "<p><b>CSE 440 Introduction to HCI: User Interface Design, Prototyping, and Evaluation (5)</b><br/>Human-Computer Interaction (HCI) theory and techniques. Methods for designing, prototyping, and evaluating user interfaces to computing applications. Human capabilities, interface technology, interface design methods, and interface evaluation tools and techniques. ", "course_name": "CSE 440", "choice_prereqs": [], "course_id": "cse440", "numCID": 440, "reg_prereqs": ["cse332"]}, {"course_info": "<p><b>CSE 403 Software Engineering (4)</b><br/>Fundamentals of software engineering using a group project as the basic vehicle. Topics covered include the software crisis, managing complexity, requirements specification, architectural and detailed design, testing and analysis, software process, and tools and environments. ", "course_name": "CSE 403", "choice_prereqs": [], "course_id": "cse403", "numCID": 403, "reg_prereqs": ["cse331", "cse332"]}, {"course_info": "<p><b>CSE 428 Computational Biology Capstone (5)</b><br/>Designs and implements a software tool or software analysis for an important problem in computational molecular biology. ", "course_name": "CSE 428", "choice_prereqs": [], "course_id": "cse428", "numCID": 428, "reg_prereqs": ["cse312", "cse331", "cse332"]}, {"course_info": "<p><b>CSE 401 Introduction to Compiler Construction (4)</b><br/>Fundamentals of compilers and interpreters; symbol tables; lexical analysis, syntax analysis, semantic analysis, code generation, and optimizations for general purpose programming languages. No credit to students who have taken CSE 413. ", "course_name": "CSE 401", "choice_prereqs": [], "course_id": "cse401", "numCID": 401, "reg_prereqs": ["cse332", "cse351"]}], "links": [{"source": 19, "target": 0}, {"source": 26, "target": 0}, {"source": 21, "target": 5}, {"source": 19, "target": 5}, {"source": 35, "target": 8}, {"source": 36, "target": 8}, {"source": 14, "target": 10}, {"source": 37, "target": 11}, {"source": 13, "target": 14}, {"source": 37, "target": 15}, {"source": 19, "target": 15}, {"source": 19, "target": 16}, {"source": 26, "target": 16}, {"source": 26, "target": 17}, {"source": 37, "target": 18}, {"source": 37, "target": 19}, {"source": 19, "target": 20}, {"source": 26, "target": 20}, {"source": 37, "target": 21}, {"source": 26, "target": 21}, {"source": 15, "target": 24}, {"source": 14, "target": 26}, {"source": 19, "target": 27}, {"source": 14, "target": 28}, {"source": 52, "target": 29}, {"source": 14, "target": 30}, {"source": 52, "target": 32}, {"source": 42, "target": 33}, {"source": 52, "target": 34}, {"source": 48, "target": 35}, {"source": 35, "target": 36}, {"source": 14, "target": 37}, {"source": 26, "target": 42}, {"source": 19, "target": 42}, {"source": 17, "target": 42}, {"source": 14, "target": 43}, {"source": 17, "target": 48}, {"source": 19, "target": 48}, {"source": 14, "target": 49}, {"source": 26, "target": 51}, {"source": 14, "target": 52}, {"source": 14, "target": 53}, {"source": 17, "target": 54}, {"source": 19, "target": 54}, {"source": 14, "target": 55}, {"source": 15, "target": 58}, {"source": 19, "target": 58}, {"source": 52, "target": 59}, {"source": 15, "target": 60}, {"source": 19, "target": 60}, {"source": 19, "target": 61}, {"source": 19, "target": 62}, {"source": 11, "target": 62}, {"source": 19, "target": 64}, {"source": 66, "target": 65}, {"source": 19, "target": 66}, {"source": 53, "target": 67}, {"source": 19, "target": 67}, {"source": 15, "target": 68}, {"source": 53, "target": 68}, {"source": 19, "target": 68}, {"source": 19, "target": 69}, {"source": 26, "target": 69}]}